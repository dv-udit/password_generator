name: Publish to PyPI on Manual Trigger

# Manual workflow trigger
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      package_version:
        # Friendly description to be shown in the UI instead of 'package_version'
        description: 'Package version for publishing to PyPI'
        # Default value if no value is explicitly provided
        default: '1.0.0'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "publish"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Update the package version in __init__.py
      - name: Update Package Version
        run: |
          # Retrieve the input value of 'package_version'
          package_version="${{ github.event.inputs.package_version }}"

          # Update the version in the __init__.py file
          sed -i "s/__version__ = \".*\"/__version__ = \"$package_version\"/" pkgUdit/__init__.py

          # Commit the changes
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -a -m "Update version to $package_version"
          git push

      # Set up Python and Install dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install setuptools wheel twine

      # Build distribution
      - name: Build distribution
        run: python setup.py sdist bdist_wheel

      # Publish to PyPI
      - name: Publish to PyPI
        if: ${{ success() }}
        run: python -m twine upload --skip-existing dist/*

        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
